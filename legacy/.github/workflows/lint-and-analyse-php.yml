name: Linters

# If a pull-request is pushed then cancel all previously running jobs related
# to that pull-request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

on:
  # push:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.13"
      - run: pip install --upgrade tox
      - name: Run commitizen (https://commitizen-tools.github.io/commitizen/)
        run: tox -e cz
      - name: Run config-check
        run: tox -e config-check

  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          config: 'docs/.markdownlint.yml'
          globs: |
            *.md

  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Install Composer dependencies
        # Allow the previous check to fail but not abort
        if: always()
        uses: ramsey/composer-install@v2
        with:
          # Ignore zip for php-webdriver/webdriver
          composer-options: "--ignore-platform-req=ext-zip"

      - name: Create config.php for unit tests
        run: cp config/config.dist.php config/config.php

      - name: Unit Tests
        run: composer phpunit

  lint-php-files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          # Ignore zip for php-webdriver/webdriver
          composer-options: "--ignore-platform-reqs"

      - name: Update the composer.lock file
        run: composer update

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      # TODO: Enable this after resolving issues
      # - name: Cache coding-standard
      #   # Allow the previous check to fail but not abort
      #   if: always()
      #   uses: actions/cache@v4
      #   with:
      #     path: .phpcs-cache
      #     key: phpcs-cache

      - name: Lint PHP files
        run: ./ci/ci-phplint

      # TODO: Enable this after resolving issues
      # - name: Check coding-standard
      #   # Allow the previous check to fail but not abort
      #   if: always()
      #   run: composer phpcs

  analyse-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.4"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
#          extensions: mbstring, iconv, mysqli, zip, gd, bz2

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2

      - name: Analyse files with PHPStan
        run: composer phpstan -- --memory-limit 2G

#      - name: Analyse files with Psalm
#        # Allow the previous check to fail but not abort
#        if: always()
#        run: composer psalm -- --shepherd
